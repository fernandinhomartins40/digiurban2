# Multi-stage build para otimização
FROM node:18-alpine AS frontend-builder

WORKDIR /app
COPY package*.json ./
RUN npm ci --silent

COPY . .
RUN npm run build

# Backend stage
FROM node:18-alpine AS backend-builder

WORKDIR /app
RUN npm install -g pm2

COPY package*.json ./
RUN npm ci --production --silent

COPY . .
COPY --from=frontend-builder /app/dist ./src/server/public

# Production stage
FROM node:18-alpine AS production

RUN addgroup -g 1001 -S nodejs && \
    adduser -S digiurban -u 1001

RUN npm install -g pm2

WORKDIR /app
COPY --from=backend-builder --chown=digiurban:nodejs /app ./

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:5000/api/health', (res) => { \
    if (res.statusCode === 200) process.exit(0); else process.exit(1); \
  }).on('error', () => process.exit(1));"

EXPOSE 5000
USER digiurban

CMD ["pm2-runtime", "start", "ecosystem.config.js", "--env", "production"] 